// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Reactive.Disposables;
using CloudDataProtection.App.Shared.Rest;
using CloudDataProtection.App.Shared.ViewModels;
using Foundation;
using ReactiveUI;
using UIKit;

namespace CloudDataProtection.App.iOS
{
	public partial class LoginViewController : ReactiveViewController<LoginViewModel>
	{
		public LoginViewController(IntPtr handle) : base(handle)
		{
		}

		public override void ViewDidLoad()
		{
			base.ViewDidLoad();
			
			ViewModel = new LoginViewModel();

			this.WhenActivated(d => {
				this.Bind(ViewModel, vm => vm.Email, view => view.LoginTextField.Text)
					.DisposeWith(d);

				this.Bind(ViewModel, vm => vm.Password, view => view.PasswordTextField.Text)
					.DisposeWith(d);

				this.BindCommand(ViewModel, vm => vm.Login, view => view.LogInButton)
					.DisposeWith(d);

				ViewModel.Login.Subscribe(OnLogin);
			});
		}
		
		private void OnLogin(LoginUserOutput user)
		{
			switch (user.Role)
			{
				case UserRole.Admin:
					PerformSegue(Segues.SegueIdentifiers.UnwindToMain, this);
					
					break;
				default:
					throw new Exception("Unimplemented user role");
			}
		}

		public override void PrepareForSegue(UIStoryboardSegue segue, NSObject sender)
		{
			base.PrepareForSegue(segue, sender);
		}
	}
}
