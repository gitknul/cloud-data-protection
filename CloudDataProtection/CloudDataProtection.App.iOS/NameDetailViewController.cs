// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Reactive.Disposables;
using System.Reactive.Linq;
using CloudDataProtection.App.Shared.ViewModels;
using ReactiveUI;

namespace CloudDataProtection.App.iOS
{
	public partial class NameDetailViewController : ReactiveViewController<NameUnavailableViewModel>
	{
		public NameViewModel NameViewModel { get; set; }
		
		public NameDetailViewController(IntPtr handle) : base(handle)
		{
		}

		public override void ViewDidLoad()
		{
			base.ViewDidLoad();

			ViewModel = new NameUnavailableViewModel(NameViewModel.Name);

			this.WhenActivated(d =>
			{
				this.Bind(ViewModel, vm => vm.ErrorDescription, v => v.ErrorDescriptionLabel.Text)
					.DisposeWith(d);

				Observable.FromEventPattern(h => CloseButton.TouchUpInside += h, h => CloseButton.TouchUpInside -= h)
					.Subscribe(_ => HandleClose());
			});
		}

		public void HandleClose()
		{
			PerformSegue(Segues.SegueIdentifiers.UnwindToAdminDashboard, this);
		}
	}
}
