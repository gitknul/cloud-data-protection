// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Reactive.Linq;
using CloudDataProtection.App.Shared.Rest;
using CloudDataProtection.App.Shared.ViewModels;
using Foundation;
using Freshheads.Storage;
using ReactiveUI;
using UIKit;

namespace CloudDataProtection.App.iOS
{
	public partial class MainViewController : ReactiveViewController<MainViewModel>
	{
		public MainViewController(IntPtr handle) : base(handle)
		{
		}

		// private bool skipInitialLogin = false;

		public override void ViewDidLoad()
		{
			base.ViewDidLoad();

			ViewModel = new MainViewModel();
			
			// Storage.RemoveAll();
			
			this.WhenActivated(d =>
			{
				this.WhenAnyValue(a => a.ViewModel.User)
					// ReSharper disable once PossibleInvalidOperationException
					// We already check with HasValue in this sequence
					.Subscribe(CheckLoggedIn);
			});
		}
		
		public void CheckLoggedIn(LoginUserOutput user)
		{
			if (user == null)
			{
				LoadingLabel.Text = "Redirecting to login page...";

				PerformSegue(Segues.SegueIdentifiers.ShowLogin, this);
				
				return;
			}

			switch (user.Role)
			{
				case UserRole.Admin:
					LoadingLabel.Text = "Redirecting to admin dashboard page...";

					PerformSegue(Segues.SegueIdentifiers.ShowAdminDashboard, this);

					break;
				default:
					throw new Exception("Unimplemented user role");
			}
		}

		partial void UnwindToMain(UIStoryboardSegue segue)
		{
		}
	}
}
